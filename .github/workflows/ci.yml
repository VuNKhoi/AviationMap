name: AviationMap CI 🚀

# 🚦 AviationMap CI runs on every PR!

# 🚦 AviationMap CI runs on every PR and can be triggered manually!
on:
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  lint:
    name: Lint & Analyze Code 🔍
    runs-on: macos-latest
    steps:
      - name: Checkout code 📦
        uses: actions/checkout@v4
      - name: Set up Flutter 💙
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Cache dependencies ⚡️
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
      - name: Get dependencies
        run: flutter pub get
      - name: Check code formatting 🎨
        run: dart format --set-exit-if-changed .
      - name: Run Flutter Analyze 🔍
        run: flutter analyze

  test:
    name: Run All Tests 🧪
    runs-on: macos-latest
    needs: lint
    steps:
      - name: Checkout code 📦
        uses: actions/checkout@v4
      - name: Set up Flutter 💙
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Cache dependencies ⚡️
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
      - name: Install lcov
        run: brew install lcov
      - name: Run tests 🧪
        run: flutter test --coverage
      - name: Upload coverage report 📊
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/lcov.info
      - name: Generate coverage summary 📝
        run: |
          set -e
          genhtml coverage/lcov.info --output-directory coverage/html
          if [ -f coverage/html/index.html ]; then
            echo "Coverage summary:" > coverage/summary.txt
            # Extract the coverage percentage from the HTML report.
            # The regex '[0-9]+\.[0-9]+(&nbsp;)?%' matches a percentage value (e.g., '85.67%' or '85.67&nbsp;%') in the HTML.
            # This assumes the HTML structure generated by 'genhtml' includes a 'Lines:' section followed by the percentage value.
            coverage_line=$(grep -A1 'Lines:' coverage/html/index.html | tail -n1)
            coverage_percentage=$(echo "$coverage_line" | grep -Eo '[0-9]+\.[0-9]+(&nbsp;)?%' | head -1)
            clean_coverage=$(echo "$coverage_percentage" | sed 's/&nbsp;//')
            if [ -z "$clean_coverage" ]; then
              echo "Error: Coverage percentage could not be extracted." >&2
              exit 1
            fi
            echo "$clean_coverage" >> coverage/summary.txt
            echo "" >> coverage/summary.txt # Ensure newline
            # Fail if coverage is below threshold (80%)
            coverage_value=$(echo "$clean_coverage" | grep -Eo '[0-9]+\.[0-9]+')
            coverage_int=${coverage_value%.*}
            if (( $(echo "$coverage_value < 80.0" | bc -l) )); then
              echo "Test coverage $coverage_value% is below threshold (80%)" >&2
              exit 1
            fi
          else
            echo "Coverage summary: (no HTML report found)" > coverage/summary.txt
            exit 1
          fi
      - name: Upload coverage summary 📊
        uses: actions/upload-artifact@v4
        with:
          name: coverage-summary
          path: coverage/summary.txt
          retention-days: 14

  build-android:
    name: Build Android APK 🤖
    runs-on: macos-latest
    needs: test
    steps:
      - name: Checkout code 📦
        uses: actions/checkout@v4
      - name: Set up Flutter 💙
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Cache dependencies ⚡️
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
      - name: Get Flutter packages
        run: flutter pub get
      - name: Build APK 🤖
        run: flutter build apk --debug
      - name: Upload APK Artifact 📎
        id: upload-apk
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk

  build-ios:
    name: Build iOS Debug App 🍏
    runs-on: macos-latest
    needs: test
    steps:
      - name: Checkout code 📦
        uses: actions/checkout@v4
      - name: Set up Flutter 💙
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Cache dependencies ⚡️
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
      - name: Get Flutter packages
        run: flutter pub get
      - name: Install CocoaPods
        run: sudo gem install cocoapods
      - name: Install Pods
        run: cd ios && pod install && cd ..
      - name: Build iOS Debug 🍏
        run: flutter build ios --debug --no-codesign
  security-scan:
    name: Check for Outdated or Vulnerable Dependencies 🔒
    runs-on: macos-latest
    steps:
      - name: Checkout code 📦
        uses: actions/checkout@v4
      - name: Set up Flutter 💙
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Run pub outdated 🔒
        run: flutter pub outdated
      - name: Upload iOS Artifact 📎
        id: upload-ios
        uses: actions/upload-artifact@v4
        with:
          name: debug-ios
          path: build/ios/iphoneos

  notify:
    name: Email Pipeline Results 📧
    runs-on: macos-latest
    needs: [build-android, build-ios]
    steps:
      - name: Download coverage summary 📊
        uses: actions/download-artifact@v4
        with:
          name: coverage-summary
          path: coverage
      - name: Send Email Notification 📧
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "AviationMap CI Results 🚦"
          to: ${{ secrets.NOTIFY_EMAIL }}
          from: ${{ secrets.SMTP_USERNAME }}
          body: |
            Hello AviationMap Team! 🎉
            
            CI Pipeline completed for PR: ${{ github.event.pull_request.title }}
            
            Status: ${{ job.status }}
            
            Artifacts:
            - Android APK: ${{ steps.upload-apk.outputs.artifact-url }}
            - iOS Debug: ${{ steps.upload-ios.outputs.artifact-url }}
            
            Coverage Summary:
            $(cat coverage/summary.txt)
            
            Check the Actions tab for full logs and details!
            
            Have a great day! ✈️
          secure: true
